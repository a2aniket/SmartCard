/**
 * Swagger Student Management System - OpenAPI 3.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.3.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Course.h
 *
 * 
 */

#ifndef Course_H_
#define Course_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  Course 
{
public:
    Course() = default;
    explicit Course(boost::property_tree::ptree const& pt);
    virtual ~Course() = default;

    Course(const Course& other) = default; // copy constructor
    Course(Course&& other) noexcept = default; // move constructor

    Course& operator=(const Course& other) = default; // copy assignment
    Course& operator=(Course&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// Course members

    /// <summary>
    /// 
    /// </summary>
    int64_t getId() const;
    void setId(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getDesc() const;
    void setDesc(std::string value);

protected:
    int64_t m_Id = 0L;
    std::string m_Name = "";
    std::string m_Desc = "";
};

std::vector<Course> createCourseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<Course>(const Course& val) {
    return val.toPropertyTree();
}

template<>
inline Course fromPt<Course>(const boost::property_tree::ptree& pt) {
    Course ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* Course_H_ */
