openapi: 3.0.3
info:
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Swagger Student Management System - OpenAPI 3.0
  version: 1.0.11
servers:
- url: https://petstore3.swagger.io/api/v3
tags:
- description: Operations about student
  externalDocs:
    description: Find out more
    url: http://swagger.io
  name: student
- description: Operations about course
  name: course
paths:
  /course:
    get:
      description: Returns list of courses
      operationId: get_course_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Course'
                type: array
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Course not found
      summary: Get list of all courses
      tags:
      - course
      x-openapi-router-controller: openapi_server.controllers.course_controller
    post:
      description: Add a new course
      operationId: add_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/xml:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
        description: Create a new course
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
          description: Successful operation
        "405":
          description: Invalid input
      summary: Add a new course
      tags:
      - course
      x-openapi-router-controller: openapi_server.controllers.course_controller
    put:
      description: Update an existing course by Id
      operationId: update_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/xml:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
        description: Update an existent course
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Course not found
        "405":
          description: Validation exception
      summary: Update an existing course
      tags:
      - course
      x-openapi-router-controller: openapi_server.controllers.course_controller
  /course/{course_id}:
    delete:
      description: delete a course
      operationId: delete_course
      parameters:
      - description: Course id to delete
        explode: false
        in: path
        name: course_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
          description: successful operation
        "400":
          description: Invalid course value
      summary: Deletes a course
      tags:
      - course
      x-openapi-router-controller: openapi_server.controllers.course_controller
    get:
      description: Returns a single course
      operationId: get_course
      parameters:
      - description: ID of course to return
        explode: false
        in: path
        name: course_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Course not found
      summary: Find course by ID
      tags:
      - course
      x-openapi-router-controller: openapi_server.controllers.course_controller
    x-python-connexion-openapi-name: "/course/{courseId}"
  /student:
    get:
      description: Returns list of students
      operationId: get_student_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Student not found
      summary: Get list of all students
      tags:
      - student
      x-openapi-router-controller: openapi_server.controllers.student_controller
    post:
      description: Add a new student
      operationId: add_student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        description: Create a new student
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
          description: Successful operation
        "405":
          description: Invalid input
      summary: Add a new student
      tags:
      - student
      x-openapi-router-controller: openapi_server.controllers.student_controller
    put:
      description: Update an existing student by Id
      operationId: update_student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        description: Update an existent student
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Student not found
        "405":
          description: Validation exception
      summary: Update an existing student
      tags:
      - student
      x-openapi-router-controller: openapi_server.controllers.student_controller
  /student/{student_id}:
    delete:
      description: delete a student
      operationId: delete_student
      parameters:
      - description: Student id to delete
        explode: false
        in: path
        name: student_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
          description: successful operation
        "400":
          description: Invalid student value
      summary: Deletes a student
      tags:
      - student
      x-openapi-router-controller: openapi_server.controllers.student_controller
    get:
      description: Returns a single student
      operationId: get_student
      parameters:
      - description: ID of student to return
        explode: false
        in: path
        name: student_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Student not found
      summary: Find student by ID
      tags:
      - student
      x-openapi-router-controller: openapi_server.controllers.student_controller
    x-python-connexion-openapi-name: "/student/{studentId}"
components:
  requestBodies:
    Employee:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Student'
        application/xml:
          schema:
            $ref: '#/components/schemas/Student'
      description: Student object that needs to be added
    Department:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'
        application/xml:
          schema:
            $ref: '#/components/schemas/Course'
      description: Course object that needs to be added
  schemas:
    Student:
      example:
        address: Pune
        phone: "1234567890"
        name: Ramesh
        id: 1
        email: ramesh@email.com
      properties:
        id:
          example: 1
          format: int64
          title: id
          type: integer
        name:
          example: Ramesh
          title: name
          type: string
        address:
          example: Pune
          format: int64
          title: address
          type: string
        email:
          example: ramesh@email.com
          title: email
          type: string
        phone:
          example: "1234567890"
          title: phone
          type: string
      title: Student
      type: object
      xml:
        name: student
    Course:
      example:
        name: name
        id: 1
        desc: desc
      properties:
        id:
          example: 1
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        desc:
          title: desc
          type: string
      title: Course
      type: object
      xml:
        name: course
