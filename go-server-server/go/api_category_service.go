/*
 * Swagger Petstore - OpenAPI 3.0
 *
 * This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
 *
 * API version: 1.0.11
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// CategoryApiService is a service that implements the logic for the CategoryApiServicer
// This service should implement the business logic for every endpoint for the CategoryApi API.
// Include any external packages or services that will be required by this service.
type CategoryApiService struct {
}

// NewCategoryApiService creates a default api service
func NewCategoryApiService() CategoryApiServicer {
	return &CategoryApiService{}
}

// AddCategory - Add a new category to the store
func (s *CategoryApiService) AddCategory(ctx context.Context, category Category) (ImplResponse, error) {
	// TODO - update AddCategory with the required logic for this service method.
	// Add api_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Category{}) or use other options such as http.Ok ...
	//return Response(200, Category{}), nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddCategory method not implemented")
}

// DeleteCategory - Deletes a category
func (s *CategoryApiService) DeleteCategory(ctx context.Context, categoryId int64) (ImplResponse, error) {
	// TODO - update DeleteCategory with the required logic for this service method.
	// Add api_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Category{}) or use other options such as http.Ok ...
	//return Response(200, Category{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteCategory method not implemented")
}

// GetCategory - Find category by ID
func (s *CategoryApiService) GetCategory(ctx context.Context, categoryId int64) (ImplResponse, error) {
	// TODO - update GetCategory with the required logic for this service method.
	// Add api_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Category{}) or use other options such as http.Ok ...
	//return Response(200, Category{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCategory method not implemented")
}

// GetCategoryList - Get list of all categories
func (s *CategoryApiService) GetCategoryList(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetCategoryList with the required logic for this service method.
	// Add api_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Category{}) or use other options such as http.Ok ...
	//return Response(200, []Category{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCategoryList method not implemented")
}

// UpdateCategory - Update an existing category
func (s *CategoryApiService) UpdateCategory(ctx context.Context, category Category) (ImplResponse, error) {
	// TODO - update UpdateCategory with the required logic for this service method.
	// Add api_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Category{}) or use other options such as http.Ok ...
	//return Response(200, Category{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateCategory method not implemented")
}
