from python-flask-server.setup import *
import unittest

class TestSetup(unittest.TestCase):

    def test_setup_requires(self):
        self.assertIsNotNone(REQUIRES)
        self.assertIsInstance(REQUIRES, list)

    def test_setup_name(self):
        self.assertIsNotNone(NAME)
        self.assertIsInstance(NAME, str)

    def test_setup_version(self):
        self.assertIsNotNone(VERSION)
        self.assertIsInstance(VERSION, str)

    def test_setup_description(self):
        self.assertIsNotNone("Code Generation API")
        self.assertIsInstance("Code Generation API", str)

    def test_setup_author_email(self):
        self.assertIsNotNone("")
        self.assertIsInstance("", str)

    def test_setup_url(self):
        self.assertIsNotNone("")
        self.assertIsInstance("", str)

    def test_setup_keywords(self):
        self.assertIsNotNone(["OpenAPI", "Code Generation API"])
        self.assertIsInstance(["OpenAPI", "Code Generation API"], list)

    def test_setup_packages(self):
        self.assertIsNotNone(find_packages())
        self.assertIsInstance(find_packages(), list)

    def test_setup_package_data(self):
        self.assertIsNotNone({'': ['openapi/openapi.yaml']})
        self.assertIsInstance({'': ['openapi/openapi.yaml']}, dict)

    def test_setup_entry_points(self):
        self.assertIsNotNone({'console_scripts': ['openapi_server=openapi_server.__main__:main']})
        self.assertIsInstance({'console_scripts': ['openapi_server=openapi_server.__main__:main']}, dict)

    def test_setup_long_description(self):
        self.assertIsNotNone("""No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)""")
        self.assertIsInstance("""No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)""", str)

if __name__ == '__main__':
    unittest.main()