/*
 * Swagger Student Management System - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CourseApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CourseApiTests
    {
        private CourseApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CourseApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CourseApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CourseApi
            //Assert.IsInstanceOf(typeof(CourseApi), instance);
        }

        
        /// <summary>
        /// Test AddCourse
        /// </summary>
        [Test]
        public void AddCourseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Course course = null;
            //var response = instance.AddCourse(course);
            //Assert.IsInstanceOf(typeof(Course), response, "response is Course");
        }
        
        /// <summary>
        /// Test DeleteCourse
        /// </summary>
        [Test]
        public void DeleteCourseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long courseId = null;
            //var response = instance.DeleteCourse(courseId);
            //Assert.IsInstanceOf(typeof(Course), response, "response is Course");
        }
        
        /// <summary>
        /// Test GetCourse
        /// </summary>
        [Test]
        public void GetCourseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long courseId = null;
            //var response = instance.GetCourse(courseId);
            //Assert.IsInstanceOf(typeof(Course), response, "response is Course");
        }
        
        /// <summary>
        /// Test GetCourseList
        /// </summary>
        [Test]
        public void GetCourseListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCourseList();
            //Assert.IsInstanceOf(typeof(List<Course>), response, "response is List<Course>");
        }
        
        /// <summary>
        /// Test UpdateCourse
        /// </summary>
        [Test]
        public void UpdateCourseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Course course = null;
            //var response = instance.UpdateCourse(course);
            //Assert.IsInstanceOf(typeof(Course), response, "response is Course");
        }
        
    }

}
