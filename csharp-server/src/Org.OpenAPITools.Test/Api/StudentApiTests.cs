/*
 * Swagger Student Management System - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing StudentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StudentApiTests
    {
        private StudentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StudentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StudentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' StudentApi
            //Assert.IsInstanceOf(typeof(StudentApi), instance);
        }

        
        /// <summary>
        /// Test AddStudent
        /// </summary>
        [Test]
        public void AddStudentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Student student = null;
            //var response = instance.AddStudent(student);
            //Assert.IsInstanceOf(typeof(Student), response, "response is Student");
        }
        
        /// <summary>
        /// Test DeleteStudent
        /// </summary>
        [Test]
        public void DeleteStudentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long studentId = null;
            //var response = instance.DeleteStudent(studentId);
            //Assert.IsInstanceOf(typeof(Student), response, "response is Student");
        }
        
        /// <summary>
        /// Test GetStudent
        /// </summary>
        [Test]
        public void GetStudentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long studentId = null;
            //var response = instance.GetStudent(studentId);
            //Assert.IsInstanceOf(typeof(Student), response, "response is Student");
        }
        
        /// <summary>
        /// Test GetStudentList
        /// </summary>
        [Test]
        public void GetStudentListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetStudentList();
            //Assert.IsInstanceOf(typeof(List<Student>), response, "response is List<Student>");
        }
        
        /// <summary>
        /// Test UpdateStudent
        /// </summary>
        [Test]
        public void UpdateStudentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Student student = null;
            //var response = instance.UpdateStudent(student);
            //Assert.IsInstanceOf(typeof(Student), response, "response is Student");
        }
        
    }

}
